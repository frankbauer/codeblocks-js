{
    "Dismiss": "Verwerfen",
    "CodeBlock": {
        "Initial_Content": "Lösungsvorgabe"
    },
    "CodeBlockContainer": {
        "ReloadResources":"Resourcen immer neu laden",
        "ReloadResources_detail":"Resourcen in Sandkästen die über die resources()-Methode geladen werden immer abrufen bevor init aufgerufen wird.",
        "Order":"Reihenfolge",
        "Display": "Darstellung",
        "Lines": "Zeilen",
        "Lines_detail": "Anzahl sichtbarer Zeilen oder <b>auto</b>.",
        "Prepopulate": "Antwort Vorbelegen",
        "Prepopulate_detail": "Lösungsvorgabe für neue Fragen angeben.",
        "Behaviour": "Verhalten",
        "ScriptV": "Script-Version",
        "ScriptV_detail": "API-Version des Sandkastens.",
        "AutoReset": "Autom. Reset",
        "AutoReset_detail": "Sandkasten bei jeder Ausführung neu erzeugen.",
        "GenerateTemplate": "Canvas erzeugen",
        "GenerateTemplate_detail":"Erstellt ein Canvas-Element für diesen Sandkasten",
        "Positioning": "Positionierung",
        "Width": "Breite",
        "Width_detail": "CSS-Eigenschaft für die Breite",
        "Height": "Höhe",
        "Height_detail": "CSS-Eigenschaft für die Höhe",
        "Alignment": "Ausrichtung",
        "Alignment_detail": "Horizontale Ausrichtung des Canvas-Element",
        "Delete": "Löschen",
        "Start": "Anfang",
        "Center": "Mitte",
        "End": "Ende",
        "ScriptVersion_1": "1.0 (original)",
        "ScriptVersion_2": "2.0 (seit 2020)",
        "ScriptVersion_3": "3.0 (experimental)",
        "Canvas": "Sandkasten",
        "Text": "Text",
        "Hidden": "Quellcode (Versteckt)",
        "Static": "Quellcode (Angabe)",
        "Block": "Antwortfeld/Lösung",
        "Blockly": "Blockly (Experimental!!!)",
        "REPL": "Interaktive Eingabe",
        "Confirm": "Bestätigung",
        "DeleteQuestion": "Soll der <span class='highlightedCard sample'>hervorgehobene</span> Block wirklick entfernt werden?",
        "TypesCaption": "Blocktypen",
        "Types": "Die Frage wird aus den folgenden Blöcken zusammengestellt. Möglichen Typen sind:<ul><li><b>Text</b>: Text der wie der ursprüngliche Fragetext ohne Syntax highlighting angezeigt wird. Die <b>[code][/code]</b> und <b>[hl][/hl]</b> können verwendet werden</li><li><b>Quellcode (Angabe)</b>: Nicht veränderbarer Quellcode mit Syntax highlighting. Der Inhalt ist deil des ausgeführten Programmes und sollte fest vorgegebenen Code enthalten.</li><li><b>Quellcode (Versteckt)</b>: Der Quellcode ist teil der ausgelieferten Webseite, wird jedoch nicht angezeigt. Diese Variante kann code enthalten der Hilfsmethoden o.ä. definiert. Der Inhalt ist deil des ausgeführten Programmes und sollte fest vorgegebenen Code enthalten.</li><li><b>Antwortfeld/Lösung</b>: Quellcode mit Syntax highlighting. Hier sollte die Musterlösung angegeben werden. Der Inhalt ist deil des ausgeführten Programmes und sollte fest vorgegebenen Code enthalten.</li><li><b>Sandkasten</b>: Eine möglichkeit um vorgegebenen Code im DOM des Browsers auszuführen. Zum Beispiel für eine Zeichenfläche die nutzbar ist um die Ergebnisse der Studenten zu visualisieren. Der Code (für Version 2.0) <b> muss ein JavaScript Object</b> mit den Methoden <ul><li><code>init(canvasElement, outputElement, scope)</code> und </li><li><code>update(txt, json, canvasElement, outputElement)</code></li></ul> definieren</b>.</li></ul>"
    },
    "CodeBlocks": {
        "run_hint": "<code>Ctrl</code>+<code>W</code> oder <code>Ctrl</code>+<code>J</code> drücken um Code auszuführen",
        "run": "Ausführen",
        "start": "Starten",
        "stop": "Anhalten",
        "AddBlock": "Neuen Block Anlegen",
        "UserCanceled": "Vom Benutzer Abgebrochen"
    },
    "CodeBlocksSettings": {
        "Language": "Sprache",
        "AllowExec": "Ausführung zulassen",
        "CVersion": "Version",
        "RunTime": "Max. Laufzeit in ms.",
        "Output": "Ausgabe",
        "MaxCharacters": "Max. Textlänge",
        "ExperimentalCompiler":"Experimentelle Sprache",
        "ExperimentalCompilerDesc":"Diese Sprachversion ist experimentell. Sowohl die Eigenschaften also auch das Verhalten können sich daher im nächsten Update ändern. Diese Version sollte nicht in Produktivumgebungen eingestezt werden.",
        "DeprecatedCompiler":"Veralteter Sprache",
        "DeprecatedCompilerDesc":"Diese Sprachversion ist veraltet und wird in einem der nächsten Updates entfernt. Bitte aktualisieren Sie Ihr Projekt auf eine aktuelle Version.",
        "Parser": "Ausgabe Behandlung",
        "Themes": "Stile",
        "TGeneral": "Allgemeine Darstellung",
        "TSolution": "Lösungsdarstellung",
        "Libraries": "Bibliotheken",
        "DomLibs": "DOM-Bibliotheken",
        "WorkLibs": "Worker-Bibliotheken",
        "PAutomatic": "Automatisch",
        "PText": "Als Text",
        "PJSON": "Als JSON",
        "PMagic": "Text+JSON (getrennt mit '\\n\\n&lt;JSON>\\n')",
        "PData": "Text+Daten (Senden mit 'CodeBlocks.postResult(data)')",
        "NumberErr": "Muss eine gültige Zahl sein.",
        "ContinousCompile": "Automatisch Ausführen",
        "PersistentArguments": "Persistente Argumente",
        "MessagePassing": "Nachrichtenaustauch (DOM und Worker)",
        "KeepAlive": "Worker nicht automatisch beenden",
        "AllowArguments": "Untersützt das Senden von Argumenten",
        "AllowArgumentsCaption": "Senden von Argumenten",
        "AllowArgumentsHint": "Mit Hilfer der Methode <code>addArgumentsTo(args)</code> eines <b>Sandkastens</b> kann ein Objekt definiert werden, welches an den Programmcode weitergereicht wird. Innerhalb des Programmcodes kann über die Variable <code>args</code> auf das so erstellte Objekt zugegriffen werden.",
        "AllowArgumentsHintJava":"Mit Hilfer der Methode <code>addArgumentsTo(args)</code> eines <b>Sandkastens</b> können die Einträge eines String-Array festgelegt werden, welches der <code>main</code>-Methode als Parameter übergeben wird.",
        "UsePersistentArgumentsCaption":"Persistente Argumente",
        "UsePersistentArgumentsHint":"Wenn diese Option aktiviert ist werden die Werte die vom Worker in der <code>args</code>-Variable abgelegt wurden direkt an <code>addArgumentsTo(args)</code> übergeben. Andernfalls ist <code>args</code> ein leers Objekt.",
        "UsePersistentArgumentsHintJava":"Wenn diese Option aktiviert ist werden die Werte im java-code in der <code>args</code>-Variable abgelegt wurden direkt an <code>addArgumentsTo(args)</code> übergeben. Andernfalls ist <code>args</code> ein leers Array.",
        "AllowMessagePassingCaption":"Nachrichtenaustauch",
        "AllowMessagePassingHint":"<b style=color:red>[EXPERIMENTAL]</b> Ermöglicht den Nachrichtenaustausch zwischen dem Wroker und dem (Canvas)DOM-Code.<br><b>Canvas-Code:</b><ul><li><code>onMessage(cmd, data)</code>: Empföngt Nachrichten vom worker</li><li><code>runner.postMessage(cmd, data)</code>: Sendet Nachrichten an den Worker. Die runner-Instanz wird der <code>init</code>-Method übergeben.</li></ul><b>Worker-Code:</b><ul><li><code>CodeBlocks.startReceivingEvents((request) => {})</code>: Die übergebene Methode empfäöngt die Nachrichten des DOM-Codes</li><li><code>CodeBlocks.postMessage(cmd, data)</code>: Sendet eine Nachricht an den DOM-Code.</li></ul>",
        "AllowMessagePassingHintJava":"<b style=color:red>[EXPERIMENTAL]</b> Ermöglicht den Nachrichtenaustausch zwischen dem Wroker und dem (Canvas)DOM-Code.<br><b>Canvas-Code:</b><ul><li><code>onMessage(cmd, data)</code>: Empföngt Nachrichten vom worker</li><li><code>runner.postMessage(cmd, data)</code>: Sendet Nachrichten an den Worker. Die runner-Instanz wird der <code>init</code>-Method übergeben.</li></ul><b>Worker-Code:</b><ul><li><code>CodeBlocks.startReceivingEvents((CodeBlocksBaseMessage request) -> {})</code>: Die übergebene Methode empfäöngt die Nachrichten des DOM-Codes</li><li><code>CodeBlocks.postMessage(cmd, data)</code>: Sendet eine Nachricht an den DOM-Code.</li></ul>",
        "KeepAliveCaption":"Worker nicht automatisch beenden",
        "KeepAliveHint":"<b style=color:red>[EXPERIMENTAL]</b> Der Worker wird nach dem beenden des studentischen Codes nicht automatisch beendet und kann weiter Nachrichten empfangen und senden.<br><br>Der Worker kann jederzeit manuell durch die <em>Anhalten</em>-Teste oder durch erreichen der maximal erlaubten Laufzeit beendet werden. Der studentische code, kann die Ausführung durch aufrufen von <code>process.exit(0)</code> beenden.<br><br>Die <code>whenFinished(args)</code>-Methode der <b>Sandkästen</b> wird sofort nach dem Ende des studentischen Codes, aber noch vor der Beendigung des Workers aufberufen.",
        "KeepAliveHintJava":"<b style=color:red>[EXPERIMENTAL]</b> Der Worker wird nach dem beenden der studentischen <code>main</code>-methode nicht automatisch beendet und kann weiter Nachrichten empfangen und senden.<br><br>Der Worker kann jederzeit manuell durch die <em>Anhalten</em>-Taste oder durch das erreichen der maximal erlaubten Laufzeit beendet werden. Der studentische code, kann die Ausführung durch aufrufen von <code>System.exit(0)</code> beenden.<br><br>Die <code>whenFinished(args)</code>-Methode der <b>Sandkästen</b> wird sofort nach dem Ende der <code>main</code>-Methode, aber noch vor der Beendigung des Workers aufberufen."
    },
    "CodePlayground": {
        "InvalidJson": "Ausgabe ist nicht JSON-Formatiert",
        "Output": "Ausgabe:",
        "Message": "Meldung:",
        "ExperimentalScriptVersion":"Experimentelle Scriptversion",
        "ExperimentalScriptVersionDesc":"Diese Scriptversion ist experimentell. Sowohl die Eigenschaften also auch das Verhalten können sich daher im nächsten Update ändern. Diese Version sollte nicht in Produktivumgebungen eingestezt werden.",
        "DeprecatedScriptVersion":"Veralteter Scriptversion",
        "DeprecatedScriptVersionDesc":"Diese Scriptversion ist veraltet und wird in einem der nächsten Updates entfernt. Bitte aktualisieren Sie Ihr Projekt auf eine aktuelle Version."
    },
    "Tagger": {
        "ConfirmRepl": "Ersetzung Bestätigen",
        "ConfirmReplMsg": "Sollen <b>alle</b> vorkomnisse von {name} mit dem untenstehenden Wert ersetzt werden?"
    },
    "RandomizerSetEditor": {
        "Caption": "Bearbeit Zusammenstellung {nr}"
    },
    "RandomizerSettings": {
        "Caption": "Würfler",
        "Available": "Definierte Platzhalter",
        "Sets": "Zusammenstellungen"
    },
    "Blockly": {
        "CodePreviewLabel": "Code-Vorschau",
        "CodePreviewCaption": "Der durch die Sequenz erzeugte Quellcode",
        "RAWToolboxLabel": "RAW Toolbox Definition",
        "RAWToolboxCaption": "Die Toolbox Definition als XML Quelltext",
        "CustomBlocksLabel": "Angepasste Blöcke",
        "CustomBlocksCaption": "Erstellen und Anpassen von eigenen Blöcken",
        "ToolboxLabel": "Toolbox Anpassen",
        "ToolboxCaption": "Die Toolbox mit einer UI verwalten und gestalten",
        "ToolboxCategories": "Kategorien",
        "ToolboxItems": "Blöcke",
        "Properties": "Eigenschaften",
        "UseCustomToolbox": "Toolbox selbst definieren",
        "ShowControls": "Kontrolleiste Anzeigen",
        "Block": {
            "TypeName": "Unique Type ID",
            "MainDescription": "Main Description (use %1, %2... for Argument PlaceHolders)",
            "CreateCustomTitle": "Create a new Block",
            "CreateCustomMessage": "Please specify a unique Type-Name (at least <b>three characters</b>) for your new Block.",
            "Arguments": "Argument List",
            "ArgumentName": "Argument Name",
            "Header": "Header",
            "HeaderDescription": "The main Row of your Block",
            "AdditionalLines": "Additional Lines",
            "AddonLineTitle": "Additional Line {nr}",
            "CompileError": "Error Compiling Block:",
            "CodeGeneratorFunction": "Code-Generator Function",
            "Properties": "Block-Eigenschaften",
            "BlockEditTitle": "Block Designer",
            "BlockEditDescription": "Define the Properties of Your Block with a simple Blockly-Interface.",
            "DesignBlockName": "DESIGNER BLOCK"
        },
        "ArgumentTypeNames": {
            "field_input": "field_input",
            "field_dropdown": "field_dropdown",
            "field_checkbox": "field_checkbox",
            "field_colour": "Farbe",
            "field_number": "Zahl",
            "field_angle": "Winkel",
            "field_variable": "field_variable",
            "field_date": "Datum",
            "field_label": "field_label",
            "field_image": "Bild",
            "input_value": "input_value",
            "input_statement": "input_statement",
            "input_dummy": "input_dummy"
        },
        "BlockTypeNames": {
            "controls_if": "Kontrolle: Bedingung (if)",
            "logic_compare": "Logik: Vergleich",
            "logic_operation": "Logik: Logische Operation",
            "logic_negate": "Logik: Logisches Nicht",
            "logic_boolean": "Logik: Wahrheitswert",
            "logic_null": "Logik: null",
            "logic_ternary": "Logik: Ternäre Logikoperation (?:)",
            "controls_repeat_ext": "Kontrolle: Schleife: n-Mal Wiederholen",
            "controls_whileUntil": "Kontrolle: Schleife: While-Until",
            "controls_for": "Kontrolle: Schleife: For",
            "controls_forEach": "Kontrolle: Schleife: For-Each",
            "controls_flow_statements": "Kontrolle: Schliefen Operationen (continue/break)",
            "math_number": "Mathe: Zahl",
            "math_arithmetic": "Mathe: Arithmetische Operation",
            "math_single": "Mathe: Unöre Operation",
            "math_trig": "Mathe: Trigonometrische Funktionen",
            "math_constant": "Mathe: Konstanten (pi, ...)",
            "math_number_property": "Mathe: Zahleigenschaften (gerade, prim...)",
            "math_round": "Mathe: Runden",
            "math_on_list": "Mathe: Reduktion auf Liste (summe, min/max, ...)",
            "math_modulo": "Mathe: Rest (Modulo)",
            "math_constrain": "Mathe: Intervall Begrenzen",
            "math_random_int": "Mathe: Zufallszahl (Ganzzahlig)",
            "math_random_float": "Mathe: Zufallszahl",
            "text": "Text",
            "text_join": "text_join",
            "text_append": "text_append",
            "text_length": "text_length",
            "text_isEmpty": "text_isEmpty",
            "text_indexOf": "text_indexOf",
            "variables_get": "variables_get",
            "text_charAt": "text_charAt",
            "text_getSubstring": "text_getSubstring",
            "text_changeCase": "text_changeCase",
            "text_trim": "text_trim",
            "text_print": "text_print",
            "text_prompt_ext": "text_prompt_ext",
            "lists_create_with": "lists_create_with",
            "lists_repeat": "lists_repeat",
            "lists_length": "lists_length",
            "lists_isEmpty": "lists_isEmpty",
            "lists_indexOf": "lists_indexOf",
            "lists_getIndex": "lists_getIndex",
            "lists_setIndex": "lists_setIndex",
            "lists_getSublist": "lists_getSublist",
            "lists_split": "lists_split",
            "lists_sort": "lists_sort",
            "colour_picker": "colour_picker",
            "colour_random": "colour_random",
            "colour_rgb": "colour_rgb",
            "colour_blend": "colour_blend"
        }
    }
}
